--SQL QUERIES
--Q1-SELF JOIN
--Find pairs of players where one is at least age 21 and the other has the same age as the first player.
SELECT p.iGN, q.iGN
FROM Players p, Players q
WHERE p.age > 20 AND q.age = p.age AND p.playerID != q.playerID;
--
--Q2-MAX/MIN/AVG
--Find max, min, and average age for all players.
SELECT MAX(age) AS maxAge, MIN(age) AS minAge, AVG(age) AS avgAge
FROM Players p;
--
--Q3-UNION/INTERSECT/MINUS
--Find players who are at least age 22 OR whose in game name contains an 'a'.
SELECT p.playerID, p.age, p.iGN
FROM Players p
WHERE p.age > 21
UNION
SELECT p.playerID, p.age, p.iGN
FROM Players p
WHERE p.iGN LIKE "%a%";
--
--Q4-RANK
--Find the rank of age 18 within Players.
SELECT RANK(18) WITHIN GROUP
(ORDER BY age DESC) "Rank of 18"
FROM Players p
--
--Q5-TOP N
--Find the tournament ID, name, and prize pool of the 2 highest prize pool tournaments.
SELECT t.tournamentID, t.name, t.prizePool
FROM (SELECT * FROM Tournaments T ORDER BY t.prizePool DESC)
WHERE ROWNUM < 3
ORDER BY t.prizePool
--
--Q6-GROUP BY, HAVING, COUNT
--Find the player ID, player IGN, and name of players with more than 2 social media accounts. Sort by playerID.
SELECT p.playerID, p.iGN, p.name, COUNT(*)
FROM Players p, SocialMedia sm
WHERE p.playerID = sm.playerID
GROUP BY p.playerID, p.iGN, p.name
HAVING COUNT(*) > 2
ORDER BY p.playerID
--
--Q7-DIVISION, CORRELATED SUBQUERY, NON-CORRELATED SUBQUERY
--For every player who participated in every tournament on Cloud 9: Find the player ID and IGN.
SELECT p.playerID, p.iGN
FROM Players p
WHERE NOT EXISTS(
		(SELECT t.teamID
		 FROM Teams t
		 WHERE t.teamName = 'Cloud 9')
		MINUS
		(SELECT pa.teamID
		 FROM ParticipatesIn pa, Tournaments to
		 WHERE p.startDate < to.date AND (p.endDate > to.date OR p.endDate IS NULL) 
					     AND t.teamID = pa.teamID)
		)
ORDER BY p.iGN;
--
--Q8-RELATE 4 OR MORE RELATIONS
--Find players and coaches who have won Worlds
SELECT p.iGN, c.name
FROM Player p, Coach c, ParticipatesIn pa, Tournament to
WHERE (p.startDate < c.endDate OR c.endDate IS NULL) AND
      (c.startDate < p.endDate OR p.endDate IS NULL) AND
      c.teamID = p.teamID                            AND
      (to.date < p.endDate OR p.endDate IS NULL)     AND
      (to.date < c.endDate OR c.endDate IS NULL)     AND
      to.date > p.startDate                          AND
      to.date > c.startDate     		     AND
      to.tournamentID = pa.tournamentID 	     AND
      pa.result = 1
ORDER BY p.iGN;
--
--Q9-OUTER JOIN
--List all teams and show those who participated
SELECT p.teamID 
FROM ParticipatesIn pa
LEFT OUTER JOIN Tournaments to t.name on t.tournamentID = p.tournamentID
--